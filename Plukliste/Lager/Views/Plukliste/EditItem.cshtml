@using Lager;
@model dynamic

@*@model Lager.Models.PluklistItemModel*@

@{
    ViewData["Title"] = "EditItem";
}

<h1>EditItem</h1>

<h4>PluklistItemModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditItem">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @foreach (PluklistItemModel item in Model.details)
            {
                <div class="form-group">
                    <label asp-for="@item.ProductID" class="control-label"></label>
                    <select asp-for="@item.ProductID" asp-items="@Model.products" class="form-control"></select>
                    <span asp-validation-for="@item.ProductID" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="@item.Description" class="control-label"></label>
                    <input asp-for="@item.Description" class="form-control" disabled />
                    <span asp-validation-for="@item.Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="@item.Antal" class="control-label"></label>
                    <input asp-for="@item.Antal" class="form-control" />
                    <span asp-validation-for="@item.Antal" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Details" asp-route-id="@Model.id">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
